name: Fourth Workflow

on:
  push:
    branches:
        -master
        -'releases/**'
  pull_request:
    branches-ignore:
        - test
    types:
        - opened
  workflow_dispatch:
    inputs:
      display-bom:
        required: false
        type: 'boolean'
        default: false

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: npm-dep-${{ hashFiles('**/package-lock.json')}}
      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build the app
        run: npm run lint
    
  test:
    runs-on: ubuntu-latest   
      
    services:
        db:
            image: postgres:17.4-alpine3.21
            ports:
                - 5432:5432
            env:
                POSTGRES_USER: ${{ secrets.DB_USERNAME }}
                POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
                POSTGRES_DB: gh_db
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Seed the database
        run: >
          PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h localhost
          -U ${{ secrets.DB_USERNAME }}
          -d gh_db
          -f ${{ github.workspace }}/indus/data/init_db.sql

      - name: Start Postgres REST
        run: >
          docker run -d --rm --net=host
          -e PGRST_JWT_SECRET="${{ secrets.PGRST_JWT_SECRET }}"
          -e PGRST_DB_URI="postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost/gh_db"
          postgrest/postgrest

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm run dev
          wait-on: "http://localhost:5173"
        env:
          VITE_BACKEND_TOKEN: ${{ secrets.VITE_BACKEND_TOKEN }}
        

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      bom: ${{ steps.publish-bom.outputs.bom_list }}
      result: ${{ needs.lint.outputs.job-result }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.cache/Cypress
          key: npm-dep-${{ hashFiles('**/package-lock.json') }}

      - name: Get dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build the app
        run: npm run build
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-app
          path: dist

      - name: Detail Content
        id: publish-bom
        run: |
          echo 'bom list<<EOF' >> $GITHUB_OUTPUT
          find dist -name '*.js' -exec echo '{}' \; >> $GITHUB_OUTPUT
          echo EOF >> $GITHUB_OUTPUT


  deploy:
    needs: [build, lint]
    if: github.event_name != 'pull_request'
    uses: ./.github/workflows/deploy.yml
    with:
        artifact-name: my-app
  
    